# implementation of card game - Memory

import simplegui
import random

# helper function to initialize globals
def new_game():
    global turns, state, exposed, cards
    exposed = [False] * 16
    card_one = 0
    card_two = 0
    turns = 0
    state = 0
    list_one = range(0,8)
    list_two = range(0,8)
    cards = list_one + list_two
#    print cards

    random.shuffle(cards)

#    print cards

     
# define event handlers
def mouseclick(pos):
    # add game state logic here
    global exposed, state, turns, card_one, card_two
    for card in range(len(cards)):
        if pos[0] >= (50 * card) and pos[0] <= (50 * (card + 1)):
            if exposed[card] == False:
                exposed[card] = True

                if state == 0:
                    card_one = card
                    state = 1
                elif state == 1:
                    card_two = card
                    state = 2
                    turns += 1
                elif state == 2:
                    state = 1
                    if cards[card_one] != cards[card_two]:
                        exposed[card_one] = False
                        exposed[card_two] = False
                    card_one = card
                else:
                    pass
                    
 
                    
    
                        
# cards are logically 50x100 pixels in size    
def draw(canvas):
    for card in range(len(cards)):
        if exposed[card] == True:
            num_x = [(50 * card + 10), 60]
            canvas.draw_polygon([(50 * card, 0), (50 * (card + 1), 0), (50 * (card + 1), 100), (50 * card, 100)], 5, "green", "purple")
            canvas.draw_text(str(cards[card]), num_x, 50, 'Green')
        elif exposed[card] == False:
            canvas.draw_polygon([(50 * card, 0), (50 * (card + 1), 0), (50 * (card + 1), 100), (50 * card, 100)], 5, "purple", "green")         

# print how many turns the player has had
    label.set_text('Turns = ' + str(turns))

# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 800, 100)
frame.add_button("Reset", new_game)
label = frame.add_label("Turns = 0")

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
new_game()
frame.start()


